The ``100-matrix_mul`` module
======================

Using ``matrix_mul``
-------------------

This is an example text file in reStructuredText format.  First import
``matrix_mul`` from the ``100-matrix_mul`` module:


	       >>> matrix_mul = __import__('100-matrix_mul').matrix_mul

	       >>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
	       [[7, 10], [15, 22]]

	       >>> matrix_mul("hello", [[1, 2], [2, 1]])
	       Traceback (most recent call last):
  	       ...
	       TypeError: m_a must be a list

	       >>> matrix_mul([[1, 2], [2, 1]], "hello")
	       Traceback (most recent call last):
  	       ...
	       TypeError: m_b must be a list

	       >>> matrix_mul(["hello", 5], [[1, 2], [3, 4]])
	       Traceback (most recent call last):
	       ...
	       TypeError: m_a must be a list of lists

	       >>> matrix_mul([[4, 5],[3, 5]], ["5", 4])
	       Traceback (most recent call last):
	       ...
	       TypeError: m_b must be a list of lists

	       >>> matrix_mul([], [[5,4]])
	       Traceback (most recent call last):
	       ...
	       ValueError: m_a can't be empty

	       >>> matrix_mul([[5,4]], [[]])
	       Traceback (most recent call last):
	       ...
	       ValueError: m_b can't be empty

	       >>> matrix_mul([["a", 5]], [[5, 4]])
	       Traceback (most recent call last):
	       ...
	       TypeError: m_a should contain only integers or floats

	       >>> matrix_mul([[4, 5]], [["a", 4]])
	       Traceback (most recent call last):
	       ...
	       TypeError: m_b should contain only integers or floats


	       >>> matrix_mul([[4, 5], [5, 4, 2]], [[3, 4]])
	       Traceback (most recent call last):
	       ...
	       TypeError: each row of m_a must be of the same size


	       >>> matrix_mul([[4, 5], [5, 4]], [[3, 4], [5]])
	       Traceback (most recent call last):
	       ...
	       TypeError: each row of m_b must be of the same size


	       >>> matrix_mul([[4, 5, 5], [5, 4, 6]], [[3, 4], [5, 2]])
	       Traceback (most recent call last):
	       ...
	       ValueError: m_a and m_b can't be multiplied

	       >>> matrix_mul([[4.5, 5.5], [-5, 4]], [[3, 4], [5, 2]])
	       [[41.0, 29.0], [5, -12]]
